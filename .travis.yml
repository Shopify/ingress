dist: trusty

sudo: required

services:
  - docker

# FIXME(#46924): these two commands are required to enable IPv6,
# they shouldn't exist, please revert once more official solutions appeared.
# see https://github.com/travis-ci/travis-ci/issues/8891#issuecomment-353403729
before_install:
  - echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json
  - sudo service docker restart

language: generic

notifications:
  email:
    on_failure: always
    on_success: never

# New secure variables can be added using travis encrypt -r kubernetes/ingress-nginx --add K=V
env:
  global:
    - DOCKER=docker
    - SKIP_SNAPSHOT=true
    - GH_REF=github.com/kubernetes/ingress-nginx
branches:
  only:
    master
jobs:
  include:
    - stage: Static Check
      script:
        - make static-check
    - stage: Lua Unit Test
      script:
        - make lua-test
    - stage: Coverage
      script:
        - make cover
    - stage: e2e
      if: (branch = master AND env(COMPONENT) != "docs") OR (type = pull_request AND commit_message !~ /(skip-e2e)/)
      before_script:
        - sudo mkdir -p /home/travis/.kube/ && sudo chmod 777 /home/travis/.kube/
        - curl -sSL -o kubectl https://storage.googleapis.com/kubernetes-release/release/v1.13.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -sSL -o kind https://github.com/kubernetes-sigs/kind/releases/download/0.2.0/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
        - make e2e-test-image
      script:
        - test/e2e/run.sh
    # split builds to avoid job timeouts
    - stage: publish amd64
      if: repo = Shopify/ingress AND env(COMPONENT) = "ingress-controller"
      script:
        - .travis/publish.sh amd64
    - stage: publish arm
      if: type = api AND branch = master AND repo = kubernetes/ingress-nginx AND env(COMPONENT) = "ingress-controller"
      script:
        - make register-qemu
        - .travis/publish.sh arm
    - stage: publish arm64
      if: type = api AND branch = master AND repo = kubernetes/ingress-nginx AND env(COMPONENT) = "ingress-controller"
      script:
        - make register-qemu
        - .travis/publish.sh arm64
    - stage: publish ppc64le
      if: type = api AND branch = master AND repo = kubernetes/ingress-nginx AND env(COMPONENT) = "ingress-controller"
      script:
        - make register-qemu
        - .travis/publish.sh ppc64le
    - stage: publish s390x
      if: type = api AND branch = master AND repo = kubernetes/ingress-nginx AND env(COMPONENT) = "ingress-controller"
      script:
        - make register-qemu
        - .travis/publish.sh s390x
    - stage: Publish docs
      if: type = api AND branch = master AND repo = kubernetes/ingress-nginx AND env(COMPONENT) = "docs"
      script:
        - .travis/publish-docs.sh
